{"version":3,"sources":["utils.js","GlobalFilter.js","ErrorAlert.js","App.js","reportWebVitals.js","index.js"],"names":["makeFlatJSON","jsonData","key","reducedObject","Object","keys","forEach","jsonKey","jsonValue","GlobalFilter","onSearch","useState","query","setQuery","Stack","direction","gap","className","FormControl","placeholder","onChange","e","target","value","Button","variant","onClick","ErrorAlert","errorMsg","Alert","App","actualConfig","setActualConfig","config","setConfig","skipConfigKeys","filteredConfig","setFilteredConfig","filterApplied","setFilterApplied","setErrorMsg","getConfig","userIdBin","boxIdBin","axios","get","process","then","res","data","dataB64String","dataInJSON","JSON","parse","Buffer","from","toString","configData","filteredConfigData","filter","includes","console","log","handleData","catch","err","Container","initialValues","UserIdBin","BoxIdBin","onSubmit","values","a","props","Form","handleSubmit","Row","Col","md","Label","Control","required","type","name","handleChange","onBlur","handleBlur","handleReset","startsWith","dangerouslySetInnerHTML","__html","prettyPrintJson","toHtml","Table","striped","bordered","hover","at_home","Array","isArray","load_channels","reduce","acc","channel","override","years","months","date","hours","minutes","seconds","milliseconds","moment","utc","year","month","hour","minute","second","millisecond","isAfter","isChannelOverridenNow","push","join","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kWAAO,SAASA,EAAaC,GAAyC,IAA/BC,EAA8B,uDAA1B,KAAMC,EAAoB,uDAAJ,GAY7D,MAXwB,kBAAbF,GACPG,OAAOC,KAAKJ,GACPK,SAAQ,SAAAC,GACL,IAAMC,EAAYP,EAASM,GACF,kBAAdC,EACPL,EAAcD,EAAG,UAAMA,EAAN,YAAaK,GAAYA,GAAWC,EAErDL,EAAgBH,EAAaQ,EAAWN,EAAG,UAAMA,EAAN,YAAaK,GAAYA,EAASJ,MAItFA,E,2BCTI,SAASM,EAAT,GAEX,IADAC,EACD,EADCA,SACD,EAE2BC,mBAAS,IAFpC,mBAEQC,EAFR,KAEeC,EAFf,KASC,OACI,eAACC,EAAA,EAAD,CAAOC,UAAU,aAAaC,IAAK,EAAGC,UAAU,qBAAhD,UACQ,cAACC,EAAA,EAAD,CACIC,YAAY,iCACZC,SAAU,SAACC,GAAD,OAAOR,EAASQ,EAAEC,OAAOC,QACnCA,MAAOX,IAEX,cAACY,EAAA,EAAD,CACIC,QAAQ,kBACRR,UAAU,OACVS,QAAS,kBAAMhB,EAASE,IAH5B,oBAOA,qBAAKK,UAAU,OACf,cAACO,EAAA,EAAD,CACIC,QAAQ,oBACRR,UAAU,OACVS,QAAS,kBAtBrBb,EAAS,SACTH,EAAS,KAkBD,sB,YC3BD,SAASiB,EAAT,GAAmC,IAAbC,EAAY,EAAZA,SACjC,OAAOA,EACH,cAACC,EAAA,EAAD,CAAOJ,QAAQ,SAASR,UAAU,MAAlC,SACEW,IAEF,K,MC+SOE,MAxSf,WAAgB,IAAD,EAE2BnB,mBAAS,IAFpC,mBAENoB,EAFM,KAEQC,EAFR,OAGerB,mBAAS,IAHxB,mBAGNsB,EAHM,KAGEC,EAHF,OAI+BvB,mBAAS,CACnD,WACA,YACA,uBACA,yBACA,yBACA,8BACA,uBACA,yBACA,yBACA,8BACA,uBACA,yBACA,yBACA,8BACA,uBACA,yBACA,yBACA,8BACA,uBACA,yBACA,yBACA,8BACA,uBACA,yBACA,yBACA,8BACA,uBACA,yBACA,yBACA,8BACA,uBACA,yBACA,yBACA,8BACA,gCACA,4BACA,iCACA,kCACA,iCACA,kCACA,iCACA,kCACA,gCACF,4BACA,iCACA,kCACA,iCACA,kCACA,iCACA,kCACA,gCACA,4BACA,iCACA,kCACA,iCACA,kCACA,iCACA,kCACA,uBACA,gCACA,4BACA,iCACA,kCACA,iCACA,kCACA,iCACA,kCACA,4BACA,iCACA,kCACA,iCACA,kCACA,iCACA,kCACA,gCACA,4BACA,iCACA,kCACA,iCACA,kCACA,iCACA,kCACA,4BACA,+BACA,wBACA,+BACA,MACA,OACA,UACA,kBACA,oBACA,0BACA,gBACA,mBACA,oBACA,YACA,qBArGa,mBAINwB,EAJM,aAuG+BxB,mBAAS,KAvGxC,mBAuGNyB,EAvGM,KAuGUC,EAvGV,OAwG6B1B,oBAAS,GAxGtC,mBAwGN2B,EAxGM,KAwGSC,EAxGT,OAyGmB5B,mBAAS,IAzG5B,mBAyGNiB,EAzGM,KAyGIY,EAzGJ,KA2Hb,SAASC,EAAUC,EAAWC,GAC5BC,IACGC,IADH,UA9HaC,wCA8Hb,wCACkDJ,EADlD,qBACwEC,EADxE,0BAEGI,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBF,MAAK,SAAAE,IApBV,SAAoBC,GAClB,IACE,IAAMC,EAAaC,KAAKC,MAAMC,SAAOC,KAAKL,EAAe,UAAUM,SAAS,UAC5ExB,EAAgB,eAAImB,IACpB,IAAMM,EAAazD,EAAa,eAAImD,IAChCO,EAAqB,GACzBtD,OAAOC,KAAKoD,GAAYE,QAAO,SAAAzD,GAAG,OAAKiC,EAAeyB,SAAS1D,MAAMI,SAAQ,SAAAJ,GAC3EwD,EAAmBxD,GAAOuD,EAAWvD,MAEvCgC,EAAU,eAAIwB,IACd,MAAMrC,GACNwC,QAAQC,IAAI,QAASzC,GACrBmB,EAAYnB,EAAEmC,aASZO,CAAWd,MAEZe,OAAM,SAAAC,GAAG,OAAIzB,EAAYyB,EAAIT,eA8DlC,OACE,sBAAKvC,UAAU,MAAf,UACE,oBAAIA,UAAU,2BAAd,mBACA,cAACU,EAAD,CAAYC,SAAUA,IACtB,eAACsC,EAAA,EAAD,WACE,iDACA,qBAAKjD,UAAU,qBAAf,SACE,cAAC,IAAD,CACEkD,cAAe,CACbC,UAAW,2BACXC,SAAU,4BAEZC,SAAQ,uCAAE,WAAOC,GAAP,SAAAC,EAAA,sDACR/B,EAAU8B,EAAOH,UAAWG,EAAOF,UAD3B,2CAAF,sDALV,SASG,SAAAI,GAAK,OACJ,cAACC,EAAA,EAAD,CAAMJ,SAAUG,EAAME,aAAtB,SACE,eAACC,EAAA,EAAD,CAAK3D,UAAU,sBAAf,UACE,eAAC4D,EAAA,EAAD,CAAKC,IAAE,EAAP,UACE,cAACJ,EAAA,EAAKK,MAAN,wBACA,cAACL,EAAA,EAAKM,QAAN,CACEC,UAAQ,EACRC,KAAK,OACL/D,YAAY,YACZgE,KAAK,YACL/D,SAAUqD,EAAMW,aAChBC,OAAQZ,EAAMa,WACd/D,MAAOkD,EAAMF,OAAN,eAGX,eAACM,EAAA,EAAD,CAAKC,IAAE,EAAP,UACE,cAACJ,EAAA,EAAKK,MAAN,uBACA,cAACL,EAAA,EAAKM,QAAN,CACEC,UAAQ,EACRC,KAAK,OACL/D,YAAY,WACZgE,KAAK,WACL/D,SAAUqD,EAAMW,aAChBC,OAAQZ,EAAMa,WACd/D,MAAOkD,EAAMF,OAAN,cAGX,eAACM,EAAA,EAAD,CAAKC,IAAE,EAAP,UACE,cAACtD,EAAA,EAAD,CAAQP,UAAU,OAAOiE,KAAK,SAA9B,oBACA,cAAC1D,EAAA,EAAD,CAAQP,UAAU,OAAOQ,QAAQ,oBAAoByD,KAAK,QAAQxD,QAAS+C,EAAMc,YAAjF,mCAQd,eAACrB,EAAA,EAAD,CAAWjD,UAAU,OAArB,UACE,+CACA,eAAC2D,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,eAACZ,EAAA,EAAD,WACA,cAACzD,EAAD,CAAcC,SArHxB,SAAgBE,GACd,GAAGA,EAAO,CACR,IAAM6C,EAAazD,EAAa,eAAI+B,IAChC2B,EAAqB,GACzBtD,OAAOC,KAAKoD,GAAYE,QAAO,SAAAzD,GAAG,OAAIA,EAAIsF,WAAW5E,MAAQN,SAAQ,SAAAJ,GACnEwD,EAAmBxD,GAAOuD,EAAWvD,MAEvCmC,EAAkB,eAAIqB,IACtBnB,GAAiB,QAEjBA,GAAiB,GACjBF,EAAkB,OA2GV,qBACEpB,UAAU,iBACVwE,wBAAyB,CAAEC,OAAQC,IAAgBC,OAAOtD,EAAgBF,EAAiBH,WAIjG,cAAC4C,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,eAACZ,EAAA,EAAD,CAAWjD,UAAU,0BAArB,UACE,2CACA,cAAC4E,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,SACE,kCACE,+BACE,6CACA,8BAlHa,IAAzBjE,EAAakE,QACR,OAEA,YAiHK,+BACE,kDACA,6BAAMlE,EAAY,sBAEpB,+BACE,yDACA,6BAAMA,EAAY,6BAEpB,+BACE,+CACA,6BAAMA,EAAY,mBAEpB,+BACE,kDACA,6BAAMA,EAAY,sBAEpB,+BACE,iDACA,6BAzGbmE,MAAMC,QAAQpE,EAAaqE,eACLrE,EAAaqE,cAAcC,QAAO,SAACC,EAAKC,GAK7D,OA5BN,SAA+BC,GAC7B,GAAIA,EAAU,CAAC,IACLC,EAA+DD,EAA/DC,MAAOC,EAAwDF,EAAxDE,OAAQC,EAAgDH,EAAhDG,KAAMC,EAA0CJ,EAA1CI,MAAOC,EAAmCL,EAAnCK,QAASC,EAA0BN,EAA1BM,QAASC,EAAiBP,EAAjBO,aACtD,SAAIN,GAASC,GAAUC,GAAQC,GAASC,GAAWC,GAAWC,IACrDC,MACJC,MACAC,KAAKT,GACLU,MAAMT,GACNC,KAAKA,GACLS,KAAKR,GACLS,OAAOR,GACPS,OAAOR,GACPS,YAAYR,GACZS,QAAQR,MAASC,OAKxB,OAAO,EAOCQ,CADclB,EAAO,SAAenD,KAAKC,MAAMkD,EAAO,UAAgB,OAExED,EAAIoB,KAAKnB,EAAQpB,MAEZmB,IACN,IACmBqB,KAAK,KAEtB,4BC/LIC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/E,MAAK,YAAkD,IAA/CgF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7d89ecbd.chunk.js","sourcesContent":["export function makeFlatJSON(jsonData, key=null, reducedObject = {}) {\r\n    if (typeof jsonData === 'object') {\r\n        Object.keys(jsonData)\r\n            .forEach(jsonKey => {\r\n                const jsonValue = jsonData[jsonKey];\r\n                if (typeof jsonValue !== 'object') {\r\n                    reducedObject[key ? `${key}.${jsonKey}` : jsonKey] = jsonValue;\r\n                } else {\r\n                    reducedObject = makeFlatJSON(jsonValue, key ? `${key}.${jsonKey}` : jsonKey, reducedObject);\r\n                }\r\n            });\r\n    }\r\n    return reducedObject;\r\n}","import { useState } from 'react';\r\nimport { Stack, FormControl, Button } from 'react-bootstrap';\r\n\r\nexport default function GlobalFilter({\r\n    onSearch\r\n}) {\r\n\r\n    const [query, setQuery] = useState('');\r\n\r\n    function onReset() {\r\n        setQuery(\"\");\r\n        onSearch(\"\");\r\n    }\r\n\r\n    return (\r\n        <Stack direction=\"horizontal\" gap={3} className=\"border rounded p-3\">\r\n                <FormControl\r\n                    placeholder=\"Search by config key to filter\"\r\n                    onChange={(e) => setQuery(e.target.value)}\r\n                    value={query}\r\n                />\r\n                <Button\r\n                    variant=\"outline-primary\"\r\n                    className=\"mx-2\"\r\n                    onClick={() => onSearch(query)}\r\n                >\r\n                    Search\r\n                </Button>\r\n                <div className=\"vr\" />\r\n                <Button\r\n                    variant=\"outline-secondary\"\r\n                    className=\"mx-2\"\r\n                    onClick={() => onReset()}\r\n                >\r\n                    Reset\r\n                </Button>\r\n            </Stack>\r\n    )\r\n}","import { Alert } from 'react-bootstrap';\r\n\r\nexport default function ErrorAlert({ errorMsg }) {\r\n    return errorMsg ? (\r\n        <Alert variant=\"danger\" className=\"m-2\">\r\n        { errorMsg }\r\n        </Alert>\r\n    ) : null\r\n}","import { useState } from 'react';\nimport axios from 'axios';\nimport { Buffer } from 'buffer';\nimport { prettyPrintJson } from 'pretty-print-json';\nimport { Container, Row, Col, Form, Button, Table } from 'react-bootstrap';\nimport { Formik } from 'formik';\nimport moment from 'moment';\nimport { makeFlatJSON } from './utils';\nimport GlobalFilter from './GlobalFilter';\nimport ErrorAlert from './ErrorAlert';\nimport './App.css';\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\n\nfunction App() {\n\n  const [actualConfig, setActualConfig] = useState({});\n  const [config, setConfig] = useState({});\n  const [skipConfigKeys, setSkipConfigKeys] = useState([\n    \"boxIdBin\",\n    \"boxIdText\",\n    \"analog_channels.0.id\",\n    \"analog_channels.0.name\",\n    \"analog_channels.0.volt\",\n    \"analog_channels.0.ampRating\",\n    \"analog_channels.1.id\",\n    \"analog_channels.1.name\",\n    \"analog_channels.1.volt\",\n    \"analog_channels.1.ampRating\",\n    \"analog_channels.2.id\",\n    \"analog_channels.2.name\",\n    \"analog_channels.2.volt\",\n    \"analog_channels.2.ampRating\",\n    \"analog_channels.3.id\",\n    \"analog_channels.3.name\",\n    \"analog_channels.3.volt\",\n    \"analog_channels.3.ampRating\",\n    \"analog_channels.4.id\",\n    \"analog_channels.4.name\",\n    \"analog_channels.4.volt\",\n    \"analog_channels.4.ampRating\",\n    \"analog_channels.5.id\",\n    \"analog_channels.5.name\",\n    \"analog_channels.5.volt\",\n    \"analog_channels.5.ampRating\",\n    \"analog_channels.6.id\",\n    \"analog_channels.6.name\",\n    \"analog_channels.6.volt\",\n    \"analog_channels.6.ampRating\",\n    \"analog_channels.7.id\",\n    \"analog_channels.7.name\",\n    \"analog_channels.7.volt\",\n    \"analog_channels.7.ampRating\",\n    \"load_channels.0.currentRating\",\n    \"load_channels.0.delayTime\",\n    \"load_channels.0.devices.0.name\",\n    \"load_channels.0.devices.0.phase\",\n    \"load_channels.0.devices.1.name\",\n    \"load_channels.0.devices.1.phase\",\n    \"load_channels.0.devices.2.name\",\n    \"load_channels.0.devices.2.phase\",\n    \"load_channels.1.currentRating\",\n  \"load_channels.1.delayTime\",\n  \"load_channels.1.devices.0.name\",\n  \"load_channels.1.devices.0.phase\",\n  \"load_channels.1.devices.1.name\",\n  \"load_channels.1.devices.1.phase\",\n  \"load_channels.1.devices.2.name\",\n  \"load_channels.1.devices.2.phase\",\n  \"load_channels.2.currentRating\",\n  \"load_channels.2.delayTime\",\n  \"load_channels.2.devices.0.name\",\n  \"load_channels.2.devices.0.phase\",\n  \"load_channels.2.devices.1.name\",\n  \"load_channels.2.devices.1.phase\",\n  \"load_channels.2.devices.2.name\",\n  \"load_channels.2.devices.2.phase\",\n  \"load_channels.3.name\",\n  \"load_channels.3.currentRating\",\n  \"load_channels.3.delayTime\",\n  \"load_channels.3.devices.0.name\",\n  \"load_channels.3.devices.0.phase\",\n  \"load_channels.3.devices.1.name\",\n  \"load_channels.3.devices.1.phase\",\n  \"load_channels.3.devices.2.name\",\n  \"load_channels.3.devices.2.phase\",\n  \"load_channels.4.delayTime\",\n  \"load_channels.4.devices.0.name\",\n  \"load_channels.4.devices.0.phase\",\n  \"load_channels.4.devices.1.name\",\n  \"load_channels.4.devices.1.phase\",\n  \"load_channels.4.devices.2.name\",\n  \"load_channels.4.devices.2.phase\",\n  \"load_channels.5.currentRating\",\n  \"load_channels.5.delayTime\",\n  \"load_channels.5.devices.0.name\",\n  \"load_channels.5.devices.0.phase\",\n  \"load_channels.5.devices.1.name\",\n  \"load_channels.5.devices.1.phase\",\n  \"load_channels.5.devices.2.name\",\n  \"load_channels.5.devices.2.phase\",\n  \"user_preferences.currency\",\n  \"user_preferences.lock_energy\",\n  \"user_preferences.time\",\n  \"user_preferences.energy_unit\",\n  \"key\",\n  \"name\",\n  \"at_home\",\n  \"selected_scheme\",\n  \"savings_selection\",\n  \"battery_saver_selection\",\n  \"tou_selection\",\n  \"demand_selection\",\n  \"currentLoadStatus\",\n  \"grid_type\",\n  \"energy_selection\"\n  ]);\n  const [filteredConfig, setFilteredConfig] = useState({});\n  const [filterApplied, setFilterApplied] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n\n  function handleData(dataB64String) {\n    try { \n      const dataInJSON = JSON.parse(Buffer.from(dataB64String, 'base64').toString('ascii'));\n      setActualConfig({...dataInJSON});\n      const configData = makeFlatJSON({...dataInJSON});\n      let filteredConfigData = {};\n      Object.keys(configData).filter(key => !skipConfigKeys.includes(key)).forEach(key => {\n        filteredConfigData[key] = configData[key]\n      });\n      setConfig({...filteredConfigData});\n    } catch(e) {\n      console.log('error', e)\n      setErrorMsg(e.toString());\n    }\n  }\n\n  function getConfig(userIdBin, boxIdBin) {\n    axios\n      .get(`${BASE_URL}/api/BoxFiles/File?UserIdBin=${userIdBin}&BoxIdBin=${boxIdBin}&filename=config.json`)\n      .then((res) => res.data)\n      .then(data => {\n        handleData(data);\n      })\n      .catch(err => setErrorMsg(err.toString()));\n  }\n\n  function search(query) {\n    if(query) {\n      const configData = makeFlatJSON({...actualConfig});\n      let filteredConfigData = {};\n      Object.keys(configData).filter(key => key.startsWith(query)).forEach(key => {\n        filteredConfigData[key] = configData[key]\n      });\n      setFilteredConfig({...filteredConfigData});\n      setFilterApplied(true);\n    } else {\n      setFilterApplied(false);\n      setFilteredConfig({});\n    }\n    \n  }\n\n  function getHomeStatus() {\n    if (actualConfig.at_home === false) {\n      return \"Away\";\n    } else {\n      return \"Home\";\n    }\n  }\n\n  function isChannelOverridenNow(override) {\n    if (override) {\n      const { years, months, date, hours, minutes, seconds, milliseconds } = override;\n      if (years && months && date && hours && minutes && seconds && milliseconds ) {\n        return moment()\n          .utc()\n          .year(years)\n          .month(months)\n          .date(date)\n          .hour(hours)\n          .minute(minutes)\n          .second(seconds)\n          .millisecond(milliseconds)\n          .isAfter(moment().utc())\n      } else {\n        return false;\n      }\n    }\n    return false;\n  }\n\n  function getOverrideValues() {\n    if(Array.isArray(actualConfig.load_channels)) {\n      const overridenLoads = actualConfig.load_channels.reduce((acc, channel) => {\n        let overrideVal = channel['override'] ? JSON.parse(channel['override']) : null;\n        if (isChannelOverridenNow(overrideVal)) {\n          acc.push(channel.name);\n        }\n        return acc;\n      }, []);\n      return overridenLoads.join(',');\n    }\n    return '';\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"text-center text-primary\">Eflex</h1>\n      <ErrorAlert errorMsg={errorMsg} />\n      <Container>\n        <h3>GET config file</h3>\n        <div className=\"border rounded p-3\">\n          <Formik\n            initialValues={{\n              UserIdBin: '3rK2D4gvHAyn10CmYaKaCQ==',\n              BoxIdBin: 'EeuTzQQVrVCeIQJCCmQAAw=='\n            }}\n            onSubmit={async (values) => {\n              getConfig(values.UserIdBin, values.BoxIdBin)\n            }}\n          >\n            {props => (\n              <Form onSubmit={props.handleSubmit}>\n                <Row className=\"g-2 align-items-end\">\n                  <Col md>\n                    <Form.Label>UserIdBin</Form.Label>\n                    <Form.Control\n                      required\n                      type=\"text\"\n                      placeholder=\"UserIdBin\"\n                      name=\"UserIdBin\"\n                      onChange={props.handleChange}\n                      onBlur={props.handleBlur}\n                      value={props.values[\"UserIdBin\"]}\n                    />\n                  </Col>\n                  <Col md>\n                    <Form.Label>BoxIdBin</Form.Label>\n                    <Form.Control\n                      required\n                      type=\"text\"\n                      placeholder=\"BoxIdBin\"\n                      name=\"BoxIdBin\"\n                      onChange={props.handleChange}\n                      onBlur={props.handleBlur}\n                      value={props.values[\"BoxIdBin\"]}\n                    />\n                  </Col>\n                  <Col md>\n                    <Button className=\"mx-3\" type=\"submit\">Submit</Button>\n                    <Button className=\"mx-3\" variant=\"outline-secondary\" type=\"reset\" onClick={props.handleReset}>Reset</Button>\n                  </Col>\n                </Row>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </Container>\n      <Container className=\"mt-2\">\n        <h5> Config JSON </h5>\n        <Row>\n          <Col md={6}>\n            <Container>\n            <GlobalFilter onSearch={search} />\n              <pre\n                className=\"config__viewer\"\n                dangerouslySetInnerHTML={{ __html: prettyPrintJson.toHtml(filterApplied ? filteredConfig : config)}}\n              />\n            </Container>\n          </Col>\n          <Col md={6}>\n            <Container className=\"border rounded p-3 my-2\">\n              <h5> Summary </h5>\n              <Table striped bordered hover>\n                <tbody>\n                  <tr>\n                    <td>Home / Away</td>\n                    <td>{ getHomeStatus() }</td>\n                  </tr>\n                  <tr>\n                    <td>Energy Selection</td>\n                    <td>{ actualConfig['energy_selection'] }</td>\n                  </tr>\n                  <tr>\n                    <td>Battery Saver Selection</td>\n                    <td>{ actualConfig['battery_saver_selection'] }</td>\n                  </tr>\n                  <tr>\n                    <td>TOU Selection</td>\n                    <td>{ actualConfig['tou_selection'] }</td>\n                  </tr>\n                  <tr>\n                    <td>Demand Selection</td>\n                    <td>{ actualConfig['demand_selection'] }</td>\n                  </tr>\n                  <tr>\n                    <td>Overriden Loads</td>\n                    <td>{ getOverrideValues() }</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Container>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}