{"version":3,"sources":["utils.js","socket.js","GlobalFilter.js","ErrorAlert.js","App.js","reportWebVitals.js","index.js"],"names":["makeFlatJSON","jsonData","key","reducedObject","Object","keys","forEach","jsonKey","jsonValue","hardBoot","newConnection","userId","statusCallback","logsCallback","a","start","invoke","on","message","prevData","concat","timestamp","Date","toLocaleString","console","error","coldBoot","initializeSocket","process","SOCKET_URL","signalR","withUrl","configureLogging","Information","withAutomaticReconnect","build","onclose","off","onreconnecting","onreconnected","GlobalFilter","onSearch","useState","query","setQuery","className","Row","Col","sm","lg","FormControl","placeholder","onChange","e","target","value","Button","size","variant","onClick","ErrorAlert","errorMsg","Alert","App","actualConfig","setActualConfig","config","setConfig","socketLogs","setSocketLogs","socketStatus","setSocketStatus","skipConfigKeys","filteredConfig","setFilteredConfig","filterApplied","setFilterApplied","setErrorMsg","getConfig","userIdBin","boxIdBin","axios","get","then","res","data","dataB64String","dataInJSON","JSON","parse","Buffer","from","toString","configData","filteredConfigData","filter","includes","log","handleData","catch","err","search","startsWith","getHomeStatus","atHome","at_home","getOverrideValues","Array","isArray","load_channels","reduce","acc","channel","override","years","months","date","hours","minutes","seconds","milliseconds","moment","utc","year","month","hour","minute","second","millisecond","isAfter","isChannelOverridenNow","push","name","join","getSocketStatusHtml","socketColor","style","backgroundColor","Navbar","bg","Container","Brand","order","md","span","initialValues","UserIdBin","BoxIdBin","onSubmit","values","props","Form","handleSubmit","Label","Control","required","type","handleChange","onBlur","handleBlur","handleReset","dangerouslySetInnerHTML","__html","prettyPrintJson","toHtml","Table","striped","bordered","hover","length","wordBreak","map","socketLog","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a3e2414.chunk.js","sourcesContent":["export function makeFlatJSON(jsonData, key=null, reducedObject = {}) {\r\n    if (typeof jsonData === 'object') {\r\n        Object.keys(jsonData)\r\n            .forEach(jsonKey => {\r\n                const jsonValue = jsonData[jsonKey];\r\n                if (typeof jsonValue !== 'object') {\r\n                    reducedObject[key ? `${key}.${jsonKey}` : jsonKey] = jsonValue;\r\n                } else {\r\n                    reducedObject = makeFlatJSON(jsonValue, key ? `${key}.${jsonKey}` : jsonKey, reducedObject);\r\n                }\r\n            });\r\n    }\r\n    return reducedObject;\r\n}","import * as signalR from '@microsoft/signalr';\r\n\r\nasync function hardBoot(newConnection, userId, statusCallback, logsCallback) {\r\n    try {\r\n        statusCallback(\"progress\");\r\n        await newConnection.start();\r\n        await newConnection.invoke(\"registerConnection\", userId);\r\n        statusCallback(\"connected\");\r\n        newConnection.on('updateFromServer', (message) => {\r\n            logsCallback(prevData => prevData.concat([{\r\n                timestamp: new Date().toLocaleString(),\r\n                message\r\n            }]));\r\n        });\r\n    } catch (error) {\r\n        statusCallback(\"disconnected\");\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nasync function coldBoot(newConnection, userId, statusCallback, logsCallback) {\r\n    try {\r\n        statusCallback(\"progress\");\r\n        await newConnection.invoke(\"registerConnection\", userId);\r\n        statusCallback(\"connected\");\r\n        newConnection.on('updateFromServer', (message) => {\r\n            logsCallback(prevData => prevData.concat([{\r\n                timestamp: new Date().toLocaleString(),\r\n                message\r\n            }]));\r\n        });\r\n    } catch (error) {\r\n        statusCallback(\"disconnected\");\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nexport async function initializeSocket(userId, statusCallback, logsCallback) {\r\n    const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n    const SOCKET_URL = `${BASE_URL}/api/userhub`;\r\n    const newConnection = new signalR.HubConnectionBuilder()\r\n        .withUrl(SOCKET_URL)\r\n        .configureLogging(signalR.LogLevel.Information)\r\n        .withAutomaticReconnect()\r\n        .build();\r\n    await hardBoot(newConnection, userId, statusCallback, logsCallback);\r\n    newConnection.onclose(async () => {\r\n        statusCallback(\"disconnected\");\r\n        newConnection.off('updateFromServer');\r\n        await hardBoot(newConnection, userId, statusCallback, logsCallback);\r\n    });\r\n    newConnection.onreconnecting(async () => {\r\n        newConnection.off('updateFromServer');\r\n        statusCallback(\"progress\");\r\n    });\r\n    newConnection.onreconnected(async () => {\r\n        await coldBoot(newConnection, userId, statusCallback, logsCallback);\r\n    });\r\n}","import { useState } from 'react';\r\nimport { Row, Col, FormControl, Button } from 'react-bootstrap';\r\n\r\nexport default function GlobalFilter({\r\n    onSearch\r\n}) {\r\n\r\n    const [query, setQuery] = useState('');\r\n\r\n    function onReset() {\r\n        setQuery(\"\");\r\n        onSearch(\"\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"border rounded p-2\">\r\n            <Row className=\"align-items-end\">\r\n                <Col sm={12} lg={4}>\r\n                    <FormControl\r\n                        className=\"mb-1\"\r\n                        placeholder=\"Search by config key to filter\"\r\n                        onChange={(e) => setQuery(e.target.value)}\r\n                        value={query}\r\n                    />\r\n                </Col>\r\n                <Col sm={12} lg={4}>\r\n                    <Button\r\n                        size=\"sm\"\r\n                        variant=\"outline-primary\"\r\n                        className=\"mb-1\"\r\n                        onClick={() => onSearch(query)}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                    <Button\r\n                        size=\"sm\"\r\n                        variant=\"outline-secondary\"\r\n                        className=\"ms-2 mb-1\"\r\n                        onClick={() => onReset()}\r\n                    >\r\n                        Reset\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}","import { Alert } from 'react-bootstrap';\r\n\r\nexport default function ErrorAlert({ errorMsg }) {\r\n    return errorMsg ? (\r\n        <Alert variant=\"danger\" className=\"m-2\">\r\n        { errorMsg }\r\n        </Alert>\r\n    ) : null\r\n}","import { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Buffer } from 'buffer';\r\nimport { prettyPrintJson } from 'pretty-print-json';\r\nimport {\r\n  Navbar,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Table\r\n} from 'react-bootstrap';\r\nimport { Formik } from 'formik';\r\nimport moment from 'moment';\r\nimport { makeFlatJSON } from './utils';\r\nimport { initializeSocket } from './socket';\r\nimport GlobalFilter from './GlobalFilter';\r\nimport ErrorAlert from './ErrorAlert';\r\nimport './App.css';\r\n\r\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\r\n\r\nfunction App() {\r\n\r\n  const [actualConfig, setActualConfig] = useState({});\r\n  const [config, setConfig] = useState({});\r\n  const [socketLogs, setSocketLogs] = useState([]);\r\n  const [socketStatus, setSocketStatus] = useState();\r\n  const [skipConfigKeys, setSkipConfigKeys] = useState([\r\n    \"boxIdBin\",\r\n    \"boxIdText\",\r\n    \"analog_channels.0.id\",\r\n    \"analog_channels.0.name\",\r\n    \"analog_channels.0.volt\",\r\n    \"analog_channels.0.ampRating\",\r\n    \"analog_channels.1.id\",\r\n    \"analog_channels.1.name\",\r\n    \"analog_channels.1.volt\",\r\n    \"analog_channels.1.ampRating\",\r\n    \"analog_channels.2.id\",\r\n    \"analog_channels.2.name\",\r\n    \"analog_channels.2.volt\",\r\n    \"analog_channels.2.ampRating\",\r\n    \"analog_channels.3.id\",\r\n    \"analog_channels.3.name\",\r\n    \"analog_channels.3.volt\",\r\n    \"analog_channels.3.ampRating\",\r\n    \"analog_channels.4.id\",\r\n    \"analog_channels.4.name\",\r\n    \"analog_channels.4.volt\",\r\n    \"analog_channels.4.ampRating\",\r\n    \"analog_channels.5.id\",\r\n    \"analog_channels.5.name\",\r\n    \"analog_channels.5.volt\",\r\n    \"analog_channels.5.ampRating\",\r\n    \"analog_channels.6.id\",\r\n    \"analog_channels.6.name\",\r\n    \"analog_channels.6.volt\",\r\n    \"analog_channels.6.ampRating\",\r\n    \"analog_channels.7.id\",\r\n    \"analog_channels.7.name\",\r\n    \"analog_channels.7.volt\",\r\n    \"analog_channels.7.ampRating\",\r\n    \"load_channels.0.currentRating\",\r\n    \"load_channels.0.delayTime\",\r\n    \"load_channels.0.devices.0.name\",\r\n    \"load_channels.0.devices.0.phase\",\r\n    \"load_channels.0.devices.1.name\",\r\n    \"load_channels.0.devices.1.phase\",\r\n    \"load_channels.0.devices.2.name\",\r\n    \"load_channels.0.devices.2.phase\",\r\n    \"load_channels.1.currentRating\",\r\n  \"load_channels.1.delayTime\",\r\n  \"load_channels.1.devices.0.name\",\r\n  \"load_channels.1.devices.0.phase\",\r\n  \"load_channels.1.devices.1.name\",\r\n  \"load_channels.1.devices.1.phase\",\r\n  \"load_channels.1.devices.2.name\",\r\n  \"load_channels.1.devices.2.phase\",\r\n  \"load_channels.2.currentRating\",\r\n  \"load_channels.2.delayTime\",\r\n  \"load_channels.2.devices.0.name\",\r\n  \"load_channels.2.devices.0.phase\",\r\n  \"load_channels.2.devices.1.name\",\r\n  \"load_channels.2.devices.1.phase\",\r\n  \"load_channels.2.devices.2.name\",\r\n  \"load_channels.2.devices.2.phase\",\r\n  \"load_channels.3.name\",\r\n  \"load_channels.3.currentRating\",\r\n  \"load_channels.3.delayTime\",\r\n  \"load_channels.3.devices.0.name\",\r\n  \"load_channels.3.devices.0.phase\",\r\n  \"load_channels.3.devices.1.name\",\r\n  \"load_channels.3.devices.1.phase\",\r\n  \"load_channels.3.devices.2.name\",\r\n  \"load_channels.3.devices.2.phase\",\r\n  \"load_channels.4.delayTime\",\r\n  \"load_channels.4.devices.0.name\",\r\n  \"load_channels.4.devices.0.phase\",\r\n  \"load_channels.4.devices.1.name\",\r\n  \"load_channels.4.devices.1.phase\",\r\n  \"load_channels.4.devices.2.name\",\r\n  \"load_channels.4.devices.2.phase\",\r\n  \"load_channels.5.currentRating\",\r\n  \"load_channels.5.delayTime\",\r\n  \"load_channels.5.devices.0.name\",\r\n  \"load_channels.5.devices.0.phase\",\r\n  \"load_channels.5.devices.1.name\",\r\n  \"load_channels.5.devices.1.phase\",\r\n  \"load_channels.5.devices.2.name\",\r\n  \"load_channels.5.devices.2.phase\",\r\n  \"user_preferences.currency\",\r\n  \"user_preferences.lock_energy\",\r\n  \"user_preferences.time\",\r\n  \"user_preferences.energy_unit\",\r\n  \"key\",\r\n  \"name\",\r\n  \"at_home\",\r\n  \"selected_scheme\",\r\n  \"savings_selection\",\r\n  \"battery_saver_selection\",\r\n  \"tou_selection\",\r\n  \"demand_selection\",\r\n  \"currentLoadStatus\",\r\n  \"grid_type\",\r\n  \"energy_selection\"\r\n  ]);\r\n  const [filteredConfig, setFilteredConfig] = useState({});\r\n  const [filterApplied, setFilterApplied] = useState(false);\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n\r\n  function handleData(dataB64String) {\r\n    try { \r\n      const dataInJSON = JSON.parse(Buffer.from(dataB64String, 'base64').toString('ascii'));\r\n      // console.log('CONFIG', JSON.stringify());\r\n      setActualConfig({...dataInJSON});\r\n      const configData = makeFlatJSON({...dataInJSON});\r\n      let filteredConfigData = {};\r\n      Object.keys(configData).filter(key => !skipConfigKeys.includes(key)).forEach(key => {\r\n        filteredConfigData[key] = configData[key]\r\n      });\r\n      setConfig({...filteredConfigData});\r\n    } catch(e) {\r\n      console.log('error', e)\r\n      setErrorMsg(e.toString());\r\n    }\r\n  }\r\n\r\n  function getConfig(userIdBin, boxIdBin) {\r\n    axios\r\n      .get(`${BASE_URL}/api/BoxFiles/File?UserIdBin=${userIdBin}&BoxIdBin=${boxIdBin}&filename=config.json`)\r\n      .then((res) => res.data)\r\n      .then(data => {\r\n        handleData(data);\r\n      })\r\n      .catch(err => setErrorMsg(err.toString()));\r\n  }\r\n\r\n  function search(query) {\r\n    if(query) {\r\n      const configData = makeFlatJSON({...actualConfig});\r\n      let filteredConfigData = {};\r\n      Object.keys(configData).filter(key => key.startsWith(query)).forEach(key => {\r\n        filteredConfigData[key] = configData[key]\r\n      });\r\n      setFilteredConfig({...filteredConfigData});\r\n      setFilterApplied(true);\r\n    } else {\r\n      setFilterApplied(false);\r\n      setFilteredConfig({});\r\n    }\r\n    \r\n  }\r\n\r\n  function getHomeStatus() {\r\n    const atHome = actualConfig.at_home;\r\n    if (typeof atHome === 'boolean') {\r\n      return atHome ? 'Home' : 'Away';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  function isChannelOverridenNow(override) {\r\n    if (override) {\r\n      const { years, months, date, hours, minutes, seconds, milliseconds } = override;\r\n      if (years && months && date && hours && minutes && seconds && milliseconds ) {\r\n        return moment()\r\n          .utc()\r\n          .year(years)\r\n          .month(months)\r\n          .date(date)\r\n          .hour(hours)\r\n          .minute(minutes)\r\n          .second(seconds)\r\n          .millisecond(milliseconds)\r\n          .isAfter(moment().utc())\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function getOverrideValues() {\r\n    if(Array.isArray(actualConfig.load_channels)) {\r\n      const overridenLoads = actualConfig.load_channels.reduce((acc, channel) => {\r\n        let overrideVal = channel['override'] ? JSON.parse(channel['override']) : null;\r\n        if (isChannelOverridenNow(overrideVal)) {\r\n          acc.push(channel.name);\r\n        }\r\n        return acc;\r\n      }, []);\r\n      return overridenLoads.join(',');\r\n    }\r\n    return '';\r\n  }\r\n\r\n  function getSocketStatusHtml() {\r\n    let socketColor;\r\n    if (socketStatus === 'connected') {\r\n      socketColor = 'green';\r\n    } else if (socketStatus === 'disconnected') {\r\n      socketColor = 'red';\r\n    } else if (socketStatus === 'progress') {\r\n      socketColor = 'yellow';\r\n    } else {\r\n      socketColor = 'grey';\r\n    }\r\n    return <div style={{backgroundColor: socketColor}} className=\"socket-status-holder\"></div>;\r\n  }\r\n\r\n  function renderSummary() {\r\n    return (\r\n      <>\r\n        <div className=\"rounded border p-2 mb-2\">\r\n          <h6> Summary </h6>\r\n          <Table striped bordered hover className=\"mb-0\">\r\n            <tbody>\r\n              <tr>\r\n                <td>Home / Away</td>\r\n                <td>{ getHomeStatus() }</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Energy Selection</td>\r\n                <td>{ actualConfig['energy_selection'] }</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Battery Saver Selection</td>\r\n                <td>{ actualConfig['battery_saver_selection'] }</td>\r\n              </tr>\r\n              <tr>\r\n                <td>TOU Selection</td>\r\n                <td>{ actualConfig['tou_selection'] }</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Demand Selection</td>\r\n                <td>{ actualConfig['demand_selection'] }</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Overriden Loads</td>\r\n                <td>{ getOverrideValues() }</td>\r\n              </tr>\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n        <div className=\"rounded border p-2 mb-2 socket__viewer\">\r\n          <h6> Socket Logs {getSocketStatusHtml()} </h6>\r\n          {socketLogs?.length > 0 ? <Table striped bordered hover className=\"mb-0\" style={{wordBreak: \"break-word\"}}>\r\n            <thead>\r\n              <tr>\r\n                <th>Local Time</th>\r\n                <th>Logs</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {socketLogs.map((socketLog, index) => (\r\n                <tr key={index}>\r\n                  <td>{socketLog.timestamp}</td>\r\n                  <td>{socketLog.message}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table> : <span>[]</span>}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  function renderGETConfigForm() {\r\n    return (\r\n      <>\r\n        <div className=\"border rounded p-2 mb-2\">\r\n          <Formik\r\n            initialValues={{\r\n              UserIdBin: '3rK2D4gvHAyn10CmYaKaCQ==',\r\n              BoxIdBin: 'EeuTzQQVrVCeIQJCCmQAAw=='\r\n            }}\r\n            onSubmit={async (values) => {\r\n              getConfig(values.UserIdBin, values.BoxIdBin);\r\n              await initializeSocket(values.UserIdBin, setSocketStatus, setSocketLogs);\r\n            }}\r\n          >\r\n            {props => (\r\n              <Form onSubmit={props.handleSubmit}>\r\n                <Row className=\"align-items-end\">\r\n                  <Col sm={12} lg={4}>\r\n                    <Form.Label>UserIdBin</Form.Label>\r\n                    <Form.Control\r\n                      required\r\n                      type=\"text\"\r\n                      placeholder=\"UserIdBin\"\r\n                      name=\"UserIdBin\"\r\n                      className=\"mb-1\"\r\n                      onChange={props.handleChange}\r\n                      onBlur={props.handleBlur}\r\n                      value={props.values[\"UserIdBin\"]}\r\n                    />\r\n                  </Col>\r\n                  <Col sm={12} lg={4}>\r\n                    <Form.Label>BoxIdBin</Form.Label>\r\n                    <Form.Control\r\n                      required\r\n                      type=\"text\"\r\n                      placeholder=\"BoxIdBin\"\r\n                      name=\"BoxIdBin\"\r\n                      className=\"mb-1\"\r\n                      onChange={props.handleChange}\r\n                      onBlur={props.handleBlur}\r\n                      value={props.values[\"BoxIdBin\"]}\r\n                    />\r\n                  </Col>\r\n                  <Col sm={12} lg={4}>\r\n                    <Button\r\n                      size=\"sm\"\r\n                      type=\"submit\"\r\n                      className=\"mb-1\"\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                    <Button\r\n                      size=\"sm\"\r\n                      className=\"ms-2 mb-1\"\r\n                      variant=\"outline-secondary\"\r\n                      onClick={props.handleReset}\r\n                    >\r\n                      Reset\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n        <div className=\"border rounded p-2\">\r\n          <h6> Result </h6>\r\n          <GlobalFilter onSearch={search} />\r\n            <pre\r\n              className=\"config__viewer my-2\"\r\n              dangerouslySetInnerHTML={{ __html: prettyPrintJson.toHtml(filterApplied ? filteredConfig : config)}}\r\n            />\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Container>\r\n          <Navbar.Brand>\r\n            Eflex\r\n          </Navbar.Brand>\r\n        </Container>\r\n      </Navbar>\r\n      <ErrorAlert errorMsg={errorMsg} />\r\n      <Container className=\"mt-2\">\r\n        <Row>\r\n          <Col sm={{order: 'last'}} md={{ span:6, order: 'first'}}>\r\n            { renderGETConfigForm() }\r\n          </Col>\r\n          <Col sm={{order: 'last'}} md={{ span:6, order: 'first'}}>\r\n            { renderSummary() }\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}