{"version":3,"sources":["utils.js","GlobalFilter.js","ErrorAlert.js","App.js","reportWebVitals.js","index.js"],"names":["makeFlatJSON","jsonData","key","reducedObject","Object","keys","forEach","jsonKey","jsonValue","GlobalFilter","onSearch","useState","query","setQuery","className","Row","Col","sm","lg","FormControl","placeholder","onChange","e","target","value","Button","size","variant","onClick","ErrorAlert","errorMsg","Alert","App","actualConfig","setActualConfig","config","setConfig","skipConfigKeys","filteredConfig","setFilteredConfig","filterApplied","setFilterApplied","setErrorMsg","getConfig","userIdBin","boxIdBin","axios","get","process","then","res","data","dataB64String","dataInJSON","JSON","parse","Buffer","from","toString","configData","filteredConfigData","filter","includes","console","log","handleData","catch","err","search","startsWith","getHomeStatus","atHome","at_home","getOverrideValues","Array","isArray","load_channels","reduce","acc","channel","override","years","months","date","hours","minutes","seconds","milliseconds","moment","utc","year","month","hour","minute","second","millisecond","isAfter","isChannelOverridenNow","push","name","join","Navbar","bg","Container","Brand","order","md","span","initialValues","UserIdBin","BoxIdBin","onSubmit","values","a","props","Form","handleSubmit","Label","Control","required","type","handleChange","onBlur","handleBlur","handleReset","dangerouslySetInnerHTML","__html","prettyPrintJson","toHtml","Table","striped","bordered","hover","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9cb2d76a.chunk.js","sourcesContent":["export function makeFlatJSON(jsonData, key=null, reducedObject = {}) {\r\n    if (typeof jsonData === 'object') {\r\n        Object.keys(jsonData)\r\n            .forEach(jsonKey => {\r\n                const jsonValue = jsonData[jsonKey];\r\n                if (typeof jsonValue !== 'object') {\r\n                    reducedObject[key ? `${key}.${jsonKey}` : jsonKey] = jsonValue;\r\n                } else {\r\n                    reducedObject = makeFlatJSON(jsonValue, key ? `${key}.${jsonKey}` : jsonKey, reducedObject);\r\n                }\r\n            });\r\n    }\r\n    return reducedObject;\r\n}","import { useState } from 'react';\r\nimport { Row, Col, FormControl, Button } from 'react-bootstrap';\r\n\r\nexport default function GlobalFilter({\r\n    onSearch\r\n}) {\r\n\r\n    const [query, setQuery] = useState('');\r\n\r\n    function onReset() {\r\n        setQuery(\"\");\r\n        onSearch(\"\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"border rounded p-2\">\r\n            <Row className=\"align-items-end\">\r\n                <Col sm={12} lg={4}>\r\n                    <FormControl\r\n                        className=\"mb-1\"\r\n                        placeholder=\"Search by config key to filter\"\r\n                        onChange={(e) => setQuery(e.target.value)}\r\n                        value={query}\r\n                    />\r\n                </Col>\r\n                <Col sm={12} lg={4}>\r\n                    <Button\r\n                        size=\"sm\"\r\n                        variant=\"outline-primary\"\r\n                        className=\"mb-1\"\r\n                        onClick={() => onSearch(query)}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                    <Button\r\n                        size=\"sm\"\r\n                        variant=\"outline-secondary\"\r\n                        className=\"ms-2 mb-1\"\r\n                        onClick={() => onReset()}\r\n                    >\r\n                        Reset\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}","import { Alert } from 'react-bootstrap';\r\n\r\nexport default function ErrorAlert({ errorMsg }) {\r\n    return errorMsg ? (\r\n        <Alert variant=\"danger\" className=\"m-2\">\r\n        { errorMsg }\r\n        </Alert>\r\n    ) : null\r\n}","import { useState } from 'react';\nimport axios from 'axios';\nimport { Buffer } from 'buffer';\nimport { prettyPrintJson } from 'pretty-print-json';\nimport {\n  Navbar,\n  Container,\n  Row,\n  Col,\n  Form,\n  Button,\n  Table\n} from 'react-bootstrap';\nimport { Formik } from 'formik';\nimport moment from 'moment';\nimport { makeFlatJSON } from './utils';\nimport GlobalFilter from './GlobalFilter';\nimport ErrorAlert from './ErrorAlert';\nimport './App.css';\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\n\nfunction App() {\n\n  const [actualConfig, setActualConfig] = useState({});\n  const [config, setConfig] = useState({});\n  const [skipConfigKeys, setSkipConfigKeys] = useState([\n    \"boxIdBin\",\n    \"boxIdText\",\n    \"analog_channels.0.id\",\n    \"analog_channels.0.name\",\n    \"analog_channels.0.volt\",\n    \"analog_channels.0.ampRating\",\n    \"analog_channels.1.id\",\n    \"analog_channels.1.name\",\n    \"analog_channels.1.volt\",\n    \"analog_channels.1.ampRating\",\n    \"analog_channels.2.id\",\n    \"analog_channels.2.name\",\n    \"analog_channels.2.volt\",\n    \"analog_channels.2.ampRating\",\n    \"analog_channels.3.id\",\n    \"analog_channels.3.name\",\n    \"analog_channels.3.volt\",\n    \"analog_channels.3.ampRating\",\n    \"analog_channels.4.id\",\n    \"analog_channels.4.name\",\n    \"analog_channels.4.volt\",\n    \"analog_channels.4.ampRating\",\n    \"analog_channels.5.id\",\n    \"analog_channels.5.name\",\n    \"analog_channels.5.volt\",\n    \"analog_channels.5.ampRating\",\n    \"analog_channels.6.id\",\n    \"analog_channels.6.name\",\n    \"analog_channels.6.volt\",\n    \"analog_channels.6.ampRating\",\n    \"analog_channels.7.id\",\n    \"analog_channels.7.name\",\n    \"analog_channels.7.volt\",\n    \"analog_channels.7.ampRating\",\n    \"load_channels.0.currentRating\",\n    \"load_channels.0.delayTime\",\n    \"load_channels.0.devices.0.name\",\n    \"load_channels.0.devices.0.phase\",\n    \"load_channels.0.devices.1.name\",\n    \"load_channels.0.devices.1.phase\",\n    \"load_channels.0.devices.2.name\",\n    \"load_channels.0.devices.2.phase\",\n    \"load_channels.1.currentRating\",\n  \"load_channels.1.delayTime\",\n  \"load_channels.1.devices.0.name\",\n  \"load_channels.1.devices.0.phase\",\n  \"load_channels.1.devices.1.name\",\n  \"load_channels.1.devices.1.phase\",\n  \"load_channels.1.devices.2.name\",\n  \"load_channels.1.devices.2.phase\",\n  \"load_channels.2.currentRating\",\n  \"load_channels.2.delayTime\",\n  \"load_channels.2.devices.0.name\",\n  \"load_channels.2.devices.0.phase\",\n  \"load_channels.2.devices.1.name\",\n  \"load_channels.2.devices.1.phase\",\n  \"load_channels.2.devices.2.name\",\n  \"load_channels.2.devices.2.phase\",\n  \"load_channels.3.name\",\n  \"load_channels.3.currentRating\",\n  \"load_channels.3.delayTime\",\n  \"load_channels.3.devices.0.name\",\n  \"load_channels.3.devices.0.phase\",\n  \"load_channels.3.devices.1.name\",\n  \"load_channels.3.devices.1.phase\",\n  \"load_channels.3.devices.2.name\",\n  \"load_channels.3.devices.2.phase\",\n  \"load_channels.4.delayTime\",\n  \"load_channels.4.devices.0.name\",\n  \"load_channels.4.devices.0.phase\",\n  \"load_channels.4.devices.1.name\",\n  \"load_channels.4.devices.1.phase\",\n  \"load_channels.4.devices.2.name\",\n  \"load_channels.4.devices.2.phase\",\n  \"load_channels.5.currentRating\",\n  \"load_channels.5.delayTime\",\n  \"load_channels.5.devices.0.name\",\n  \"load_channels.5.devices.0.phase\",\n  \"load_channels.5.devices.1.name\",\n  \"load_channels.5.devices.1.phase\",\n  \"load_channels.5.devices.2.name\",\n  \"load_channels.5.devices.2.phase\",\n  \"user_preferences.currency\",\n  \"user_preferences.lock_energy\",\n  \"user_preferences.time\",\n  \"user_preferences.energy_unit\",\n  \"key\",\n  \"name\",\n  \"at_home\",\n  \"selected_scheme\",\n  \"savings_selection\",\n  \"battery_saver_selection\",\n  \"tou_selection\",\n  \"demand_selection\",\n  \"currentLoadStatus\",\n  \"grid_type\",\n  \"energy_selection\"\n  ]);\n  const [filteredConfig, setFilteredConfig] = useState({});\n  const [filterApplied, setFilterApplied] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n\n  function handleData(dataB64String) {\n    try { \n      const dataInJSON = JSON.parse(Buffer.from(dataB64String, 'base64').toString('ascii'));\n      // console.log('CONFIG', JSON.stringify());\n      setActualConfig({...dataInJSON});\n      const configData = makeFlatJSON({...dataInJSON});\n      let filteredConfigData = {};\n      Object.keys(configData).filter(key => !skipConfigKeys.includes(key)).forEach(key => {\n        filteredConfigData[key] = configData[key]\n      });\n      setConfig({...filteredConfigData});\n    } catch(e) {\n      console.log('error', e)\n      setErrorMsg(e.toString());\n    }\n  }\n\n  function getConfig(userIdBin, boxIdBin) {\n    axios\n      .get(`${BASE_URL}/api/BoxFiles/File?UserIdBin=${userIdBin}&BoxIdBin=${boxIdBin}&filename=config.json`)\n      .then((res) => res.data)\n      .then(data => {\n        handleData(data);\n      })\n      .catch(err => setErrorMsg(err.toString()));\n  }\n\n  function search(query) {\n    if(query) {\n      const configData = makeFlatJSON({...actualConfig});\n      let filteredConfigData = {};\n      Object.keys(configData).filter(key => key.startsWith(query)).forEach(key => {\n        filteredConfigData[key] = configData[key]\n      });\n      setFilteredConfig({...filteredConfigData});\n      setFilterApplied(true);\n    } else {\n      setFilterApplied(false);\n      setFilteredConfig({});\n    }\n    \n  }\n\n  function getHomeStatus() {\n    const atHome = actualConfig.at_home;\n    if (typeof atHome === 'boolean') {\n      return atHome ? 'Home' : 'Away';\n    }\n    return '';\n  }\n\n  function isChannelOverridenNow(override) {\n    if (override) {\n      const { years, months, date, hours, minutes, seconds, milliseconds } = override;\n      if (years && months && date && hours && minutes && seconds && milliseconds ) {\n        return moment()\n          .utc()\n          .year(years)\n          .month(months)\n          .date(date)\n          .hour(hours)\n          .minute(minutes)\n          .second(seconds)\n          .millisecond(milliseconds)\n          .isAfter(moment().utc())\n      } else {\n        return false;\n      }\n    }\n    return false;\n  }\n\n  function getOverrideValues() {\n    if(Array.isArray(actualConfig.load_channels)) {\n      const overridenLoads = actualConfig.load_channels.reduce((acc, channel) => {\n        let overrideVal = channel['override'] ? JSON.parse(channel['override']) : null;\n        if (isChannelOverridenNow(overrideVal)) {\n          acc.push(channel.name);\n        }\n        return acc;\n      }, []);\n      return overridenLoads.join(',');\n    }\n    return '';\n  }\n\n  function renderSummary() {\n    return (\n      <div className=\"rounded border p-2 mb-2\">\n        <h6> Summary </h6>\n        <Table striped bordered hover className=\"mb-0\">\n          <tbody>\n            <tr>\n              <td>Home / Away</td>\n              <td>{ getHomeStatus() }</td>\n            </tr>\n            <tr>\n              <td>Energy Selection</td>\n              <td>{ actualConfig['energy_selection'] }</td>\n            </tr>\n            <tr>\n              <td>Battery Saver Selection</td>\n              <td>{ actualConfig['battery_saver_selection'] }</td>\n            </tr>\n            <tr>\n              <td>TOU Selection</td>\n              <td>{ actualConfig['tou_selection'] }</td>\n            </tr>\n            <tr>\n              <td>Demand Selection</td>\n              <td>{ actualConfig['demand_selection'] }</td>\n            </tr>\n            <tr>\n              <td>Overriden Loads</td>\n              <td>{ getOverrideValues() }</td>\n            </tr>\n          </tbody>\n        </Table>\n      </div>\n    )\n  }\n\n  function renderGETConfigForm() {\n    return (\n      <>\n        <div className=\"border rounded p-2 mb-2\">\n          <Formik\n            initialValues={{\n              UserIdBin: '3rK2D4gvHAyn10CmYaKaCQ==',\n              BoxIdBin: 'EeuTzQQVrVCeIQJCCmQAAw=='\n            }}\n            onSubmit={async (values) => {\n              getConfig(values.UserIdBin, values.BoxIdBin)\n            }}\n          >\n            {props => (\n              <Form onSubmit={props.handleSubmit}>\n                <Row className=\"align-items-end\">\n                  <Col sm={12} lg={4}>\n                    <Form.Label>UserIdBin</Form.Label>\n                    <Form.Control\n                      required\n                      type=\"text\"\n                      placeholder=\"UserIdBin\"\n                      name=\"UserIdBin\"\n                      className=\"mb-1\"\n                      onChange={props.handleChange}\n                      onBlur={props.handleBlur}\n                      value={props.values[\"UserIdBin\"]}\n                    />\n                  </Col>\n                  <Col sm={12} lg={4}>\n                    <Form.Label>BoxIdBin</Form.Label>\n                    <Form.Control\n                      required\n                      type=\"text\"\n                      placeholder=\"BoxIdBin\"\n                      name=\"BoxIdBin\"\n                      className=\"mb-1\"\n                      onChange={props.handleChange}\n                      onBlur={props.handleBlur}\n                      value={props.values[\"BoxIdBin\"]}\n                    />\n                  </Col>\n                  <Col sm={12} lg={4}>\n                    <Button\n                      size=\"sm\"\n                      type=\"submit\"\n                      className=\"mb-1\"\n                    >\n                      Submit\n                    </Button>\n                    <Button\n                      size=\"sm\"\n                      className=\"ms-2 mb-1\"\n                      variant=\"outline-secondary\"\n                      onClick={props.handleReset}\n                    >\n                      Reset\n                    </Button>\n                  </Col>\n                </Row>\n              </Form>\n            )}\n          </Formik>\n        </div>\n        <div className=\"border rounded p-2\">\n          <h6> Result </h6>\n          <GlobalFilter onSearch={search} />\n            <pre\n              className=\"config__viewer my-2\"\n              dangerouslySetInnerHTML={{ __html: prettyPrintJson.toHtml(filterApplied ? filteredConfig : config)}}\n            />\n        </div>\n      </>\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Container>\n          <Navbar.Brand>\n            Eflex\n          </Navbar.Brand>\n        </Container>\n      </Navbar>\n      <ErrorAlert errorMsg={errorMsg} />\n      <Container className=\"mt-2\">\n        <Row>\n          <Col sm={{order: 'last'}} md={{ span:6, order: 'first'}}>\n            { renderGETConfigForm() }\n          </Col>\n          <Col>\n            { renderSummary() }\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}